<?xml version="1.0" encoding="UTF-8"?>
<!--
      sql语句配置文件的位置
		源码包下-mybatis-3-mybatis-3.4.6\src\test\java\org\apache\ibatis\submitted\complex_property
-->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 项目中每一个sql的id都不能重名，利用namespace加以区分 -->
<mapper namespace="User"> 

  <!-- type ： 类的完整地址 -->
  <!-- id ：  resultMap的唯一的标识-->
  <resultMap type="com.pro.entity.User" id="UserResult">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <!-- column ： 数据的列名 -->
    <result column="username" jdbcType="VARCHAR" property="username"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>  <!-- password.encrypted -->
    <result column="role" jdbcType="VARCHAR" property="role"/>
    <result column="apart_id" jdbcType="INTEGER" property="apart_id"/>
  </resultMap>

  <!-- id : sql语句一个唯一名称  在DAO层sqlSession调用sql语句的查找依据-->
  <!-- parameterType : 参数类型,只用写参数类型，并且只能有一个参数 -->
  <!-- resultMap :  此条sql操作的表的列与哪一个实体的对象关联是通过这个参数去找；要去找id为UserResult的resultMap标签-->
  <!-- SQL语句中的是表名，并且区分大小写，在查询之后通过resultMap参数去对应的设置实体的信息;与上面的id相对应 -->
  <!-- 一般不用selsect * 以为写* sql底层任然要解析*，会浪费时间和资源 -->
  <!-- 拼接sql语句用到的是OGNL表达式 -->
  <select id="queryUserList" parameterType="com.pro.entity.User" resultMap="UserResult">
    SELECT * FROM USER WHERE 1=1
    <!-- &quot;  是" -->
    <if test="username != null and  !&quot;&quot;.equals(username.trim())"> and username=#{username} </if>
    <!-- 第二个是模糊查询 -->
    <if test="role != null and  !&quot;&quot;.equals(role.trim())"> and role like '%' #{role} '%' </if> 
  </select>
  	
  <delete id="deleteOne" parameterType="int">
  	delete from user where id = #{_parameter}
  </delete>
  
  <!-- Batch:批量 -->
  <delete id="deleteBatch" parameterType="java.util.List">
  	delete from user where id in(
  		<!-- separator分割符，避免自己拼接钱或后面多出一个逗号 -->
  		<foreach collection = "list" item = "item" separator=",">
  			#{item}
  		</foreach>
  	)
  </delete>
</mapper>
